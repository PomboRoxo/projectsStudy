/*
  Developer: Wylkson M.Barbosa 
  License: Free using MIT
  Created: 2019-11-27 21:04:00.000 (Manaus - AM)
*/

/* Creating Array with details Child*/

const childTreeList = []

const childTreeAdd = (childName, motherChild, fatherChild) => {
    childTreeList.push(
    {
      'childName': childName,
      'parents':{
        'motherChild': motherChild,
        'fatherChild': fatherChild
      }
    })
}

const findChild = (childName) => {
  return childTreeList.find(x=>x.childName == childName).parents || null
}

/* Check Genealogy of childs */

const haveSameMother = (childOne, childTwo) => {
  return childOne.motherChild == childTwo.motherChild 
}

const haveSameFather = (childOne, childTwo) => {
  return childOne.fatherChild == childTwo.fatherChild 
}

const areMiddleBrothers = (childOne, childTwo) => {
  return haveSameMother(childOne, childTwo) && !haveSameFather(childOne, childTwo) || 
        (!haveSameMother(childOne, childTwo) && haveSameFather(childOne, childTwo))
  
}

/* Main Executions */

childTreeAdd("Wylkson", "Mae2", "PaiDiferente2")
childTreeAdd("William", "Mae", "PaiDiferente")

const childOne = findChild('Wylkson')
const childTwo = findChild('William')

const resultSameMother = haveSameMother(childOne,childTwo)
const resultSameFather = haveSameFather(childOne,childTwo)
const resultAreMiddleBrothers = areMiddleBrothers(childOne,childTwo)

console.log('resultSameMother: ' + resultSameMother)
console.log('resultSameFather: ' + resultSameFather)
console.log('resultAreMiddleBrothers: ' + resultAreMiddleBrothers)
